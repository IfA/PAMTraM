<?xml version="1.0" encoding="UTF-8"?>
<amino-ui:CUIModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:am-var="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/AlgorithmModel/Variables" xmlns:amino-ui="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1" xmlns:ani="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/Animation" xmlns:df="dfsa" xmlns:pp-ac-assets="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/AcousticalPresentationProfile/Assets" xmlns:pp-ac-rep-props="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/AcousticalPresentationProfile/Representation/Properties" xmlns:pp-ac-rep-pval="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/AcousticalPresentationProfile/Representation/PropertyValues" xmlns:pp-ac-sounds="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/AcousticalPresentationProfile/Sounds" xmlns:pp-hap-rep-props="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/HapticalPresentationProfile/Representation/Properties" xmlns:pp-hap-rep-pval="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/HapticalPresentationProfile/Representation/PropertyValues" xmlns:pp-hap-vib="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/HapticalPresentationProfile/Vibration" xmlns:pp-vis-colors="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/ColorDefinition" xmlns:pp-vis-rep-props="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/Representation/Properties" xmlns:pp-vis-rep-pval="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/Representation/PropertyValues" xmlns:se="sewef" xmlns:td="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/TextDefinition" name="FAS">
  <components xsi:type="amino-ui:simpleContainer" name="velocity">
    <containedElements name="StaticvelocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.1"/>
        </styleProperty>
      </representation>
    </containedElements>
    <containedElements name="DynamicvelocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@DataItems/@DataItems.1"/>
        </styleProperty>
      </representation>
      <animationRecord>
        <val Trigger="//@SignalCollection/@Signals.1">
          <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.0/@containedElements.1/@representation/@styleProperty.0">
            <StylePropertyResult xsi:type="pp-vis-rep-props:Text">
              <val xsi:type="am-var:DataItemReferencingVariable" ref="//@DataItems/@DataItems.1"/>
            </StylePropertyResult>
          </PropertyAnimation>
        </val>
      </animationRecord>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="distance">
    <containedElements name="StaticdistanceTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.2"/>
        </styleProperty>
      </representation>
    </containedElements>
    <containedElements name="DynamicdistanceTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@DataItems/@DataItems.0"/>
        </styleProperty>
      </representation>
      <animationRecord>
        <val Trigger="//@SignalCollection/@Signals.0">
          <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.1/@containedElements.1/@representation/@styleProperty.0">
            <StylePropertyResult xsi:type="pp-vis-rep-props:Text">
              <val xsi:type="am-var:DataItemReferencingVariable" ref="//@DataItems/@DataItems.0"/>
            </StylePropertyResult>
          </PropertyAnimation>
        </val>
      </animationRecord>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="parkModeGauge">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.9"/>
      </styleProperty>
      <styleProperty xsi:type="pp-ac-rep-props:Sound">
        <val xsi:type="pp-ac-rep-pval:SoundReferencingValue"/>
      </styleProperty>
      <styleProperty xsi:type="pp-ac-rep-props:SoundActive">
        <val xsi:type="pp-ac-rep-pval:SoundActiveValue" name="parkMode"/>
      </styleProperty>
      <styleProperty xsi:type="pp-hap-rep-props:VibrationReference">
        <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue"/>
      </styleProperty>
      <styleProperty xsi:type="pp-hap-rep-props:VibrationActive">
        <val xsi:type="pp-hap-rep-pval:VibrationActiveValue" name="parkMode"/>
      </styleProperty>
    </representation>
    <animationRecord name="parkMode">
      <val name="parkModenoDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.2">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.1"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="parkModelowDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.4">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.3"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.0"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.0"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="parkModemediumDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.6">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.5"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.2"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.2"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="parkModehighDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.8">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.7"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.4"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.2/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.4"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
    </animationRecord>
    <containedElements>
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Width">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:Height">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
          <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.0/@colorEntry.0/@value"/>
        </styleProperty>
      </representation>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="ACCModeGauge">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.10"/>
      </styleProperty>
      <styleProperty xsi:type="pp-ac-rep-props:Sound">
        <val xsi:type="pp-ac-rep-pval:SoundReferencingValue"/>
      </styleProperty>
      <styleProperty xsi:type="pp-ac-rep-props:SoundActive">
        <val xsi:type="pp-ac-rep-pval:SoundActiveValue" name="ACCMode"/>
      </styleProperty>
      <styleProperty xsi:type="pp-hap-rep-props:VibrationReference">
        <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue"/>
      </styleProperty>
      <styleProperty xsi:type="pp-hap-rep-props:VibrationActive">
        <val xsi:type="pp-hap-rep-pval:VibrationActiveValue" name="ACCMode"/>
      </styleProperty>
    </representation>
    <animationRecord name="ACCMode">
      <val name="ACCModenoDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.3">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.2"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="ACCModelowDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.5">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.4"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.1"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.1"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="ACCModemediumDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.7">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.6"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.3"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.3"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
      <val name="ACCModehighDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.9">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.8"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.4/@val">
          <variableResult xsi:type="pp-ac-rep-pval:SoundActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.6/@val">
          <variableResult xsi:type="pp-hap-rep-pval:VibrationActiveValue" val="true"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-ac-rep-props:Sound">
            <val xsi:type="pp-ac-rep-pval:SoundReferencingValue" ref="//@sounds/@soundComponents.5"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-hap-rep-props:VibrationReference">
            <val xsi:type="pp-hap-rep-pval:VibrationReferencingValue" ref="//@sounds/@soundComponents.5"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
        <val xsi:type="se:AnimationPlayState">
          <val xsi:type="df:AnimationPlayStatePresetValue"/>
        </val>
      </val>
    </animationRecord>
    <containedElements>
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Width">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:Height">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
          <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.0/@colorEntry.0/@value"/>
        </styleProperty>
      </representation>
    </containedElements>
  </components>
  <components name="parkModeBorder">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" name="parkMode" val="HIDDEN"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.9"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderStyle" val="SOLID"/>
      <styleProperty xsi:type="pp-vis-rep-props:BorderWidth">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="10.0"/>
      </styleProperty>
    </representation>
    <animationRecord name="parkMode">
      <val name="parkModemediumDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.6">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.5"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
      </val>
      <val name="parkModemediumDangerInfiniteAnimations" Trigger="//@SignalCollection/@Signals.6">
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.0/@val">
          <val xsi:type="se:AnimationDelay">
            <val xsi:type="am-var:IntegerVariable" val="700"/>
          </val>
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.0/@val">
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </val>
      </val>
      <val name="parkModehighDangerInfiniteAnimations" Trigger="//@SignalCollection/@Signals.8">
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.0/@val">
          <val xsi:type="se:AnimationDelay">
            <val xsi:type="am-var:IntegerVariable" val="700"/>
          </val>
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.0/@val">
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </val>
      </val>
      <val name="parkModehighDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.8">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.7"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
      </val>
    </animationRecord>
  </components>
  <components name="ACCModeBorder">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" name="ACCMode" val="HIDDEN"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.10"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderStyle" val="SOLID"/>
      <styleProperty xsi:type="pp-vis-rep-props:BorderWidth">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="10.0"/>
      </styleProperty>
    </representation>
    <animationRecord name="ACCMode">
      <val name="ACCModemediumDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.7">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.6"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
      </val>
      <val name="ACCModemediumDangerInfiniteAnimations" Trigger="//@SignalCollection/@Signals.7">
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.0/@val">
          <val xsi:type="se:AnimationDelay">
            <val xsi:type="am-var:IntegerVariable" val="700"/>
          </val>
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.0/@val">
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </val>
      </val>
      <val name="ACCModehighDangerInfiniteAnimations" Trigger="//@SignalCollection/@Signals.9">
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.0/@val">
          <val xsi:type="se:AnimationDelay">
            <val xsi:type="am-var:IntegerVariable" val="700"/>
          </val>
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
        </PropertyAnimation>
        <PropertyAnimation xsi:type="ani:VariableAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.0/@val">
          <variableResult xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </val>
      </val>
      <val name="ACCModehighDangerSingleAnimation" Trigger="//@SignalCollection/@Signals.9">
        <PropertyAnimation xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.5/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.8"/>
          </StylePropertyResult>
        </PropertyAnimation>
        <val xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </val>
      </val>
    </animationRecord>
  </components>
  <sounds>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="parkModelowDanger" Frequency="440" Rate="1.0"/>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="ACCModelowDanger" Frequency="440" Rate="1.0"/>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="parkModemediumDanger" Frequency="550" Rate="2.0"/>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="ACCModemediumDanger" Frequency="550" Rate="2.0"/>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="parkModehighDanger" Frequency="660" Rate="5.0"/>
    <soundComponents xsi:type="pp-ac-sounds:GenericSoundItem" name="ACCModehighDanger" Frequency="660" Rate="5.0"/>
  </sounds>
  <vibrations>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="parkModelowDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="1" dutyCycle="0.25"/>
    </vibrationComponents>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="ACCModelowDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="1" dutyCycle="0.25"/>
    </vibrationComponents>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="parkModemediumDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="2" dutyCycle="0.5"/>
    </vibrationComponents>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="ACCModemediumDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="2" dutyCycle="0.5"/>
    </vibrationComponents>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="parkModehighDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="5" dutyCycle="0.5"/>
    </vibrationComponents>
    <vibrationComponents xsi:type="pp-hap-vib:VibrationItemGroup" name="ACCModehighDanger" Repeat="true">
      <vibrationItem xsi:type="pp-hap-vib:PulsingVibrationItem" frequency="5" dutyCycle="0.5"/>
    </vibrationComponents>
  </vibrations>
  <SignalCollection>
    <Signals name="distanceChange"/>
    <Signals name="velocityChange"/>
    <Signals name="parkModenoDangerActiveSignal"/>
    <Signals name="ACCModenoDangerActiveSignal"/>
    <Signals name="parkModelowDangerActiveSignal"/>
    <Signals name="ACCModelowDangerActiveSignal"/>
    <Signals name="parkModemediumDangerActiveSignal"/>
    <Signals name="ACCModemediumDangerActiveSignal"/>
    <Signals name="parkModehighDangerActiveSignal"/>
    <Signals name="ACCModehighDangerActiveSignal"/>
    <Signals name="parkModecollisionActiveSignal"/>
    <Signals name="ACCModecollisionActiveSignal"/>
  </SignalCollection>
  <colors>
    <colorItem xsi:type="pp-vis-colors:ColorItem">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModenoDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#45B7AF"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModenoDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#45B7AF"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModelowDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FACDAE"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModelowDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FACDAE"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModemediumDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#F8CB00"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModemediumDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#F8CB00"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModehighDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FF6B6B"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModehighDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FF6B6B"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkMode">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#9999A1"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCMode">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#9999A1"/>
      </colorEntry>
    </colorItem>
  </colors>
  <TextDefinitions>
    <textItem xsi:type="td:TextItem">
      <translation val="0.0" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="velocity">
      <translation val="velocity" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="distance">
      <translation val="distance" language="//@language"/>
    </textItem>
  </TextDefinitions>
  <language name="defaultLanguage" code="de"/>
  <colorTheme name="defaultColorTheme"/>
  <DataItems>
    <DataItems name="distance" SignalOnChange="//@SignalCollection/@Signals.0">
      <Type xsi:type="am-var:FloatVariable"/>
    </DataItems>
    <DataItems name="velocity" SignalOnChange="//@SignalCollection/@Signals.1">
      <Type xsi:type="am-var:FloatVariable"/>
    </DataItems>
  </DataItems>
  <Conditions>
    <Condition name="parkModenoDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.2">
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="12"/>
    </Condition>
    <Condition name="ACCModenoDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.3">
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="120"/>
    </Condition>
    <Condition name="parkModelowDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.4">
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="8"/>
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="12"/>
    </Condition>
    <Condition name="ACCModelowDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.5">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="120"/>
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="80"/>
    </Condition>
    <Condition name="parkModemediumDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.6">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="8"/>
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="3"/>
    </Condition>
    <Condition name="ACCModemediumDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.7">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="80"/>
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="30"/>
    </Condition>
    <Condition name="parkModehighDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.8">
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="0.2"/>
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="3"/>
    </Condition>
    <Condition name="ACCModehighDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.9">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="30"/>
      <condition compareType="GT" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="0.2"/>
    </Condition>
    <Condition name="parkModecollisionPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.10">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="0.2"/>
    </Condition>
    <Condition name="ACCModecollisionPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.11">
      <condition compareType="LTEQ" ReferneceDataItem="//@DataItems/@DataItems.0" StringReferenceValue="0.2"/>
    </Condition>
  </Conditions>
  <assets>
    <asset xsi:type="pp-ac-assets:Sound" name="parkModecollision">
      <ref ref="sound/tireSqueling.mp3"/>
    </asset>
    <asset xsi:type="pp-ac-assets:Sound" name="ACCModecollision">
      <ref ref="sound/tireSqueling.mp3"/>
    </asset>
  </assets>
</amino-ui:CUIModel>

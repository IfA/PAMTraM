<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:uic="http://www.w3.org/2013/mbui-uiCommons"
  elementFormDefault="qualified"
  targetNamespace="http://www.w3.org/2013/mbui-aui"
  xmlns="http://www.w3c.org/mbui/aui/v01">
    <!-- importing the uiCommons package -->
    <xs:import namespace="http://www.w3.org/2013/mbui-uiCommons" 
    schemaLocation="./uiCommons.xsd"/>
    
    <!-- the root element -->
    
    <xs:element name="abstractUserInterfaceModel"
      type="AbstractUserInterfaceModel"/>
    
    <!-- AbstractUserInterfaceModel -->
    <xs:complexType name="AbstractUserInterfaceModel">
        <xs:sequence>
            <!-- list of the abstract interaction units in the AUI -->
            <xs:element name="abstractInteractionUnit"
              type="AbstractInteractionUnit" minOccurs="1"
              maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- AbstractInteractionUnit -->
    <xs:complexType name="AbstractInteractionUnit">
        <xs:sequence>
            <xs:element name="aggregatedIn"
              type="Composition" minOccurs="1" maxOccurs="1"/>
            <xs:element name="eventSupport" type="EventSupport"/>
            <xs:element name="presentationSupport" type="PresentationSupport"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="role" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="frequency" type="xs:float"/>
        <xs:attribute name="repetitionFactor" type="xs:int"/>
        <xs:attribute name="domainReference" type="xs:string"/>
        <xs:attribute name="compound" type="xs:boolean" default="false"/>
    </xs:complexType>
     
    <!-- Composition -->
    <xs:complexType name="Composition">
        <xs:sequence>
            <xs:element name="associatedWith"
              type="xs:IDREF" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="compositionRole" type="xs:string"/>
        <xs:attribute name="compositionRationale" type="xs:string"/>
    </xs:complexType>
   
    <!--Trigger Support-->
    <xs:complexType name="TriggerSupport">
        <xs:complexContent>
            <xs:extension base="EventSupport">
                <xs:attribute name="triggerExpression" type="xs:string"/>
                <xs:attribute name="triggerType" type="xs:string"/>
                <xs:attribute name="requiresConfirmation" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- DataInputOutputSupport -->
    <xs:complexType name="DataInputOutputSupport">
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="minCardinality" type="xs:int"/>
        <xs:attribute name="maxCardinality" type="xs:int"/>
        <xs:attribute name="defaultValue" type="xs:string"/>
        <xs:attribute name="dataType" type="enumDataType"/>
        <xs:attribute name="dataLength" type="xs:int"/>
        <xs:attribute name="dataFormat" type="xs:string"/>
        <xs:attribute name="range" type="xs:string"/>
        <xs:attribute name="IOFacet" type="xs:string"/>
        <xs:attribute name="isDynamic" type="xs:boolean"/>
        <xs:attribute name="isRelevant" type="xs:boolean"/>
        <xs:attribute name="patternMatching" type="xs:string"/>
    </xs:complexType>
    
    <xs:simpleType name="enumDataType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="in" id="enumDataType_in"/>
            <xs:enumeration value="out" id="enumDataType_out"/>
            <xs:enumeration value="in_out" id="enumDataType_in_out"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- DataSelectionSupport-->
    <xs:complexType name="DataSelectionSupport">
       <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="start" type="xs:string"/>
        <xs:attribute name="end" type="xs:string"/>
        <xs:attribute name="selectionStep" type="xs:string"/>
        <xs:attribute name="isExandable" type="xs:boolean"/>
        <xs:attribute name="isContinuous" type="xs:boolean"/>
        <xs:attribute name="isRating" type="xs:boolean"/>
        <xs:attribute name="isSecret" type="xs:boolean"/>
    </xs:complexType>
    
    <!-- DataFilterSupport -->
    <xs:complexType name="DataFilterSupport">
        <xs:complexContent>
            <xs:extension base="DataSelectionSupport">
                <xs:sequence>
                    <xs:element name="constraint" type="uic:Constraint"/>
                </xs:sequence>
                <xs:attribute name="filterType" type="xs:string"/>
                <xs:attribute name="filterProperty" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- EventSupport -->
    <xs:complexType name="EventSupport">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="triggerSupport" type="TriggerSupport"/>
            <xs:element name="dataSelectionSupport" type="DataSelectionSupport"/>
            <xs:element name="dataInputOutputSupport" type="DataInputOutputSupport"/>
        </xs:choice>
    </xs:complexType>
    
    <!--PresentationSupport -->
    <xs:complexType name="PresentationSupport">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="dataSelectionSupport" type="DataSelectionSupport"/>
            <xs:element name="DataInputOutputSupport" type="DataInputOutputSupport"/>
        </xs:choice>
    </xs:complexType>
    
    <!-- Interaction Event -->
    <xs:complexType name="InteractionEvent">
       
    </xs:complexType>
    
    <!-- Trigger Event -->
    <xs:complexType name="TriggerEvent">
        <xs:complexContent>
            <xs:extension base="InteractionEvent">
                
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- SelectionEvent -->
    <xs:complexType name="SelectionEvent">
        <xs:complexContent>
            <xs:extension base="InteractionEvent">
                <xs:attribute name="selected" type="xs:IDREF"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- DeselectionEvent -->
    <xs:complexType name="DeselectionEvent">
        <xs:complexContent>
            <xs:extension base="InteractionEvent">
                <xs:attribute name="deselected" type="xs:IDREF"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- InputEvent -->
    <xs:complexType name="InputEvent">
       
    </xs:complexType>
   
</xs:schema>

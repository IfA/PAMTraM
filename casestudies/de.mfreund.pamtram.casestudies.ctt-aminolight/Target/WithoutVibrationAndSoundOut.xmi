<?xml version="1.0" encoding="UTF-8"?>
<amino-ui:CUIModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:am-var="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/AlgorithmModel/Variables" xmlns:amino-ui="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1" xmlns:ani="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/Animation" xmlns:cm="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/ConditionModel" xmlns:df="dfsa" xmlns:pp-vis-assets="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/Assets" xmlns:pp-vis-colors="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/ColorDefinition" xmlns:pp-vis-rep-props="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/Representation/Properties" xmlns:pp-vis-rep-pval="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/VisualPresentationProfile/Representation/PropertyValues" xmlns:se="sewef" xmlns:td="http://et.tu-dresden.de/ifa/AMINO-UI/model/v0.1/CoreLanguageModel/PresentationModel/TextDefinition" name="FAS">
  <components xsi:type="amino-ui:simpleContainer" name="relative velocityTextComponent">
    <containedElements name="Staticrelative velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.2"/>
        </styleProperty>
      </representation>
    </containedElements>
    <containedElements name="Dynamicrelative velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.1"/>
        </styleProperty>
      </representation>
      <animationRecord>
        <animation xsi:type="ani:StylePropertyAnimation" StartTrigger="//@SignalCollection/@Signals.2" PropertyToAnimate="//@components.0/@containedElements.1/@representation/@styleProperty.0"/>
      </animationRecord>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="ego velocityTextComponent">
    <containedElements name="Staticego velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.3"/>
        </styleProperty>
      </representation>
    </containedElements>
    <containedElements name="Dynamicego velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.1"/>
        </styleProperty>
      </representation>
      <animationRecord>
        <animation xsi:type="ani:StylePropertyAnimation" StartTrigger="//@SignalCollection/@Signals.3" PropertyToAnimate="//@components.1/@containedElements.1/@representation/@styleProperty.0"/>
      </animationRecord>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="target velocityTextComponent">
    <containedElements name="Statictarget velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.4"/>
        </styleProperty>
      </representation>
    </containedElements>
    <containedElements name="Dynamictarget velocityTextComponent">
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Text">
          <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.1"/>
        </styleProperty>
      </representation>
      <animationRecord>
        <animation xsi:type="ani:StylePropertyAnimation" StartTrigger="//@SignalCollection/@Signals.4" PropertyToAnimate="//@components.2/@containedElements.1/@representation/@styleProperty.0"/>
      </animationRecord>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="parkModeGauge">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.1"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
      </styleProperty>
    </representation>
    <animationRecord name="parkMode">
      <animation xsi:type="ani:AnimationGroup" StartTrigger="//@SignalCollection/@Signals.0 //@SignalCollection/@Signals.1 //@SignalCollection/@Signals.5 //@SignalCollection/@Signals.6 //@SignalCollection/@Signals.7 //@SignalCollection/@Signals.8 //@SignalCollection/@Signals.9 //@SignalCollection/@Signals.10 //@SignalCollection/@Signals.11 //@SignalCollection/@Signals.12 //@SignalCollection/@Signals.13 //@SignalCollection/@Signals.14 //@SignalCollection/@Signals.15 //@SignalCollection/@Signals.16 //@SignalCollection/@Signals.17 //@SignalCollection/@Signals.18 //@SignalCollection/@Signals.19 //@SignalCollection/@Signals.20 //@SignalCollection/@Signals.21 //@SignalCollection/@Signals.22 //@SignalCollection/@Signals.23 //@SignalCollection/@Signals.24 //@SignalCollection/@Signals.25 //@SignalCollection/@Signals.26 //@SignalCollection/@Signals.27 //@SignalCollection/@Signals.28 //@SignalCollection/@Signals.2 //@SignalCollection/@Signals.3 //@SignalCollection/@Signals.4">
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModenoDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.9">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.3"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModelowDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.13">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.5"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModemediumDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.17">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.7"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModehighDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.21">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.3/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.9"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
    <containedElements>
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Width">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:Height">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
          <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.0/@colorEntry.0/@value"/>
        </styleProperty>
      </representation>
    </containedElements>
  </components>
  <components xsi:type="amino-ui:simpleContainer" name="ACCModeGauge">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.2"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
      </styleProperty>
    </representation>
    <animationRecord name="ACCMode">
      <animation xsi:type="ani:AnimationGroup" StartTrigger="//@SignalCollection/@Signals.0 //@SignalCollection/@Signals.1 //@SignalCollection/@Signals.5 //@SignalCollection/@Signals.6 //@SignalCollection/@Signals.7 //@SignalCollection/@Signals.8 //@SignalCollection/@Signals.9 //@SignalCollection/@Signals.10 //@SignalCollection/@Signals.11 //@SignalCollection/@Signals.12 //@SignalCollection/@Signals.13 //@SignalCollection/@Signals.14 //@SignalCollection/@Signals.15 //@SignalCollection/@Signals.16 //@SignalCollection/@Signals.17 //@SignalCollection/@Signals.18 //@SignalCollection/@Signals.19 //@SignalCollection/@Signals.20 //@SignalCollection/@Signals.21 //@SignalCollection/@Signals.22 //@SignalCollection/@Signals.23 //@SignalCollection/@Signals.24 //@SignalCollection/@Signals.25 //@SignalCollection/@Signals.26 //@SignalCollection/@Signals.27 //@SignalCollection/@Signals.28 //@SignalCollection/@Signals.2 //@SignalCollection/@Signals.3 //@SignalCollection/@Signals.4">
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@representation/@styleProperty.3">
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModenoDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.10">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.4"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModelowDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.14">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.6"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModemediumDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.18">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.8"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModehighDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.22">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" PropertyToAnimate="//@components.4/@containedElements.0/@representation/@styleProperty.2">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.10"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
    <containedElements>
      <representation>
        <styleProperty xsi:type="pp-vis-rep-props:Width">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="200.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:Height">
          <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0"/>
        </styleProperty>
        <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
          <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.0/@colorEntry.0/@value"/>
        </styleProperty>
      </representation>
    </containedElements>
  </components>
  <components name="parkModeBorder">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" name="parkMode" val="HIDDEN"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.1"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderStyle" val="SOLID"/>
      <styleProperty xsi:type="pp-vis-rep-props:BorderWidth">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="10.0"/>
      </styleProperty>
    </representation>
    <animationRecord name="parkMode">
      <animation xsi:type="ani:AnimationGroup" name="parkModemediumDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.17">
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModemediumDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.7"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModemediumDangerInfiniteAnimations" StartTrigger="//@SignalCollection/@Signals.17" StopTrigger="//@SignalCollection/@Signals.19">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </animationProperty>
        <animationProperty xsi:type="se:AnimationDuration">
          <val xsi:type="df:AnimationDurationValue" val="1000.0"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModemediumDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="300.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
          </StylePropertyResult>
        </animationGroup>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModemediumDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="700.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModehighDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.21">
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModehighDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.9"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModehighDangerInfiniteAnimations" StartTrigger="//@SignalCollection/@Signals.21" StopTrigger="//@SignalCollection/@Signals.23">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </animationProperty>
        <animationProperty xsi:type="se:AnimationDuration">
          <val xsi:type="df:AnimationDurationValue" val="500.0"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModehighDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="250.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModehighDanger" PropertyToAnimate="//@components.5/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="250.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
  </components>
  <components name="ACCModeBorder">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Visibility">
        <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" name="ACCMode" val="HIDDEN"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.2"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BorderStyle" val="SOLID"/>
      <styleProperty xsi:type="pp-vis-rep-props:BorderWidth">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="10.0"/>
      </styleProperty>
    </representation>
    <animationRecord name="ACCMode">
      <animation xsi:type="ani:AnimationGroup" name="ACCModemediumDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.18">
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModemediumDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.8"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModemediumDangerInfiniteAnimations" StartTrigger="//@SignalCollection/@Signals.18" StopTrigger="//@SignalCollection/@Signals.20">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </animationProperty>
        <animationProperty xsi:type="se:AnimationDuration">
          <val xsi:type="df:AnimationDurationValue" val="1000.0"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModemediumDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="300.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
          </StylePropertyResult>
        </animationGroup>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModemediumDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="700.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModehighDangerSingleAnimation" StartTrigger="//@SignalCollection/@Signals.22">
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModehighDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BorderColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.10"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModehighDangerInfiniteAnimations" StartTrigger="//@SignalCollection/@Signals.22" StopTrigger="//@SignalCollection/@Signals.24">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountPresetValue"/>
        </animationProperty>
        <animationProperty xsi:type="se:AnimationDuration">
          <val xsi:type="df:AnimationDurationValue" val="500.0"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModehighDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="250.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue"/>
          </StylePropertyResult>
        </animationGroup>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModehighDanger" PropertyToAnimate="//@components.6/@representation/@styleProperty.0">
          <animationProperty xsi:type="se:AnimationDelay">
            <val xsi:type="df:AnimationDelayValue" val="250.0"/>
          </animationProperty>
          <StylePropertyResult xsi:type="pp-vis-rep-props:Visibility">
            <val xsi:type="pp-vis-rep-pval:VisibilityPresetValue" val="HIDDEN"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
  </components>
  <components name="parkModeLamp">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Text">
        <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.5" defaultVal="!"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.1"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:TextColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.1"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:FontSize">
        <val xsi:type="pp-vis-rep-pval:FontSizeLenght" val="32.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="80.0" unit="PX"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0" unit="PX"/>
      </styleProperty>
    </representation>
    <animationRecord name="parkModeLamp">
      <animation xsi:type="ani:AnimationGroup" name="parkModemediumDanger" StartTrigger="//@SignalCollection/@Signals.17">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModemediumDanger" PropertyToAnimate="//@components.7/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.7"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="parkModehighDanger" StartTrigger="//@SignalCollection/@Signals.21">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="parkModehighDanger" PropertyToAnimate="//@components.7/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.9"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
  </components>
  <components name="ACCModeLamp">
    <representation>
      <styleProperty xsi:type="pp-vis-rep-props:Text">
        <val xsi:type="am-var:TextItemReferencingVariable" ref="//@TextDefinitions/@textItem.6" defaultVal="!"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:BackgroundColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.2"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:TextColor">
        <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.2"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:FontSize">
        <val xsi:type="pp-vis-rep-pval:FontSizeLenght" val="32.0"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Width">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="80.0" unit="PX"/>
      </styleProperty>
      <styleProperty xsi:type="pp-vis-rep-props:Height">
        <val xsi:type="pp-vis-rep-pval:LengthValue" val="40.0" unit="PX"/>
      </styleProperty>
    </representation>
    <animationRecord name="ACCModeLamp">
      <animation xsi:type="ani:AnimationGroup" name="ACCModemediumDanger" StartTrigger="//@SignalCollection/@Signals.18">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModemediumDanger" PropertyToAnimate="//@components.8/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.8"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
      <animation xsi:type="ani:AnimationGroup" name="ACCModehighDanger" StartTrigger="//@SignalCollection/@Signals.22">
        <animationProperty xsi:type="se:AnimationIterationCount">
          <val xsi:type="df:AnimationIterationCountInt" val="1"/>
        </animationProperty>
        <animationGroup xsi:type="ani:StylePropertyAnimation" name="ACCModehighDanger" PropertyToAnimate="//@components.8/@representation/@styleProperty.1">
          <StylePropertyResult xsi:type="pp-vis-rep-props:BackgroundColor">
            <val xsi:type="pp-vis-rep-pval:ColorReferencingPropertyValue" ref="//@colors/@colorItem.10"/>
          </StylePropertyResult>
        </animationGroup>
      </animation>
    </animationRecord>
  </components>
  <sounds/>
  <vibrations/>
  <SignalCollection>
    <Signals name="distanceChange"/>
    <Signals name="velocityChange"/>
    <Signals name="relative velocityChange"/>
    <Signals name="ego velocityChange"/>
    <Signals name="target velocityChange"/>
    <Signals name="parkModeActivateSignal"/>
    <Signals name="ACCModeActivateSignal"/>
    <Signals name="parkModeDeactivateSignal"/>
    <Signals name="ACCModeDeactivateSignal"/>
    <Signals name="parkModenoDangerActivateSignal"/>
    <Signals name="ACCModenoDangerActivateSignal"/>
    <Signals name="parkModenoDangerDeactivateSignal"/>
    <Signals name="ACCModenoDangerDeactivateSignal"/>
    <Signals name="parkModelowDangerActivateSignal"/>
    <Signals name="ACCModelowDangerActivateSignal"/>
    <Signals name="parkModelowDangerDeactivateSignal"/>
    <Signals name="ACCModelowDangerDeactivateSignal"/>
    <Signals name="parkModemediumDangerActivateSignal"/>
    <Signals name="ACCModemediumDangerActivateSignal"/>
    <Signals name="parkModemediumDangerDeactivateSignal"/>
    <Signals name="ACCModemediumDangerDeactivateSignal"/>
    <Signals name="parkModehighDangerActivateSignal"/>
    <Signals name="ACCModehighDangerActivateSignal"/>
    <Signals name="parkModehighDangerDeactivateSignal"/>
    <Signals name="ACCModehighDangerDeactivateSignal"/>
    <Signals name="parkModecollisionActivateSignal"/>
    <Signals name="ACCModecollisionActivateSignal"/>
    <Signals name="parkModecollisionDeactivateSignal"/>
    <Signals name="ACCModecollisionDeactivateSignal"/>
  </SignalCollection>
  <colors>
    <colorItem xsi:type="pp-vis-colors:ColorItem">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkMode">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#9999A1"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCMode">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#9999A1"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModenoDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#45B7AF"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModenoDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#45B7AF"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModelowDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FACDAE"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModelowDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FACDAE"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModemediumDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#F8CB00"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModemediumDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#F8CB00"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="parkModehighDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FF6B6B"/>
      </colorEntry>
    </colorItem>
    <colorItem xsi:type="pp-vis-colors:ColorItem" name="ACCModehighDanger">
      <colorEntry theme="//@colorTheme">
        <value xsi:type="pp-vis-colors:HEXColorValue" val="#FF6B6B"/>
      </colorEntry>
    </colorItem>
  </colors>
  <TextDefinitions>
    <textItem xsi:type="td:TextItem">
      <translation val="0.0" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="defaultValue">
      <translation val="0.00" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="relative velocity">
      <translation val="relative velocity" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="ego velocity">
      <translation val="ego velocity" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="target velocity">
      <translation val="target velocity" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="parkMode">
      <translation val="!" language="//@language"/>
    </textItem>
    <textItem xsi:type="td:TextItem" name="ACCMode">
      <translation val="!" language="//@language"/>
    </textItem>
  </TextDefinitions>
  <language name="defaultLanguage" code="de"/>
  <colorTheme name="defaultColorTheme"/>
  <Conditions>
    <Condition xsi:type="cm:And" name="parkModePrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.1" ConditionMetSignal="//@SignalCollection/@Signals.5">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="15.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModePrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.1" ConditionMetSignal="//@SignalCollection/@Signals.6">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="15.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="200.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModePostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.1" ConditionMetSignal="//@SignalCollection/@Signals.5">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="15.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModePostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.1" ConditionMetSignal="//@SignalCollection/@Signals.6">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="15.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.1">
        <val xsi:type="cm:FloatValue" val="200.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="parkModenoDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.9">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="12.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="201.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModenoDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.10">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="120.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="201.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModenoDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.9">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="12.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="201.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModenoDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.10">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="120.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="201.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="parkModelowDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.13">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="8.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="12.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModelowDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.14">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="120.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="80.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModelowDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.13">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="8.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="12.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModelowDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.14">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="120.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="30.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="parkModemediumDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.17">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="3.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="8.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModemediumDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.18">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="80.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="30.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModemediumDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.17">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="8.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="3.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModemediumDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.18">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="80.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="30.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="parkModehighDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.21">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="3.0"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModehighDangerPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.22">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="30.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModehighDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.21">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="3.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModehighDangerPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.22">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="30.0"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="parkModecollisionPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.25">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:And" name="ACCModecollisionPrecondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.26">
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="parkModecollisionPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.25">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
    <Condition xsi:type="cm:Or" name="ACCModecollisionPostcondition" CheckConditionTrigger="//@SignalCollection/@Signals.0" ConditionMetSignal="//@SignalCollection/@Signals.26">
      <condtionGroup xsi:type="cm:Condition" compareType="GT" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue" val="0.2"/>
      </condtionGroup>
      <condtionGroup xsi:type="cm:Condition" compareType="LTEQ" ref="//@SignalCollection/@Signals.0">
        <val xsi:type="cm:FloatValue"/>
      </condtionGroup>
    </Condition>
  </Conditions>
  <assets>
    <asset xsi:type="pp-vis-assets:Image">
      <comment>parkModecollision</comment>
      <ref ref="img/boom.png"/>
    </asset>
    <asset xsi:type="pp-vis-assets:Image">
      <comment>ACCModecollision</comment>
      <ref ref="img/boom.png"/>
    </asset>
  </assets>
</amino-ui:CUIModel>
